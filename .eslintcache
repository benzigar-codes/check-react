[{"D:\\Projects\\react_learning\\src\\index.js":"1","D:\\Projects\\react_learning\\src\\pages\\Home.jsx":"2"},{"size":406,"mtime":1611032336758,"results":"3","hashOfConfig":"4"},{"size":1949,"mtime":1611044410653,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"19gdoqt",{"filePath":"9","messages":"10","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"D:\\Projects\\react_learning\\src\\index.js",[],["12","13"],"D:\\Projects\\react_learning\\src\\pages\\Home.jsx",["14","15","16","17"],"import React, { Component, useState } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker,Polyline } from \"@react-google-maps/api\";\r\nimport { useGeolocation } from \"react-use\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523,\r\n};\r\n\r\nconst Home = () => {\r\n  const options = {\r\n    strokeColor: \"#ffffff\",\r\n    strokeOpacity: 0.8,\r\n    strokeWeight: 5,\r\n    fillColor: \"#FF0000\",\r\n    fillOpacity: 0.35,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    visible: true,\r\n    radius: 30000,\r\n    paths: [\r\n      { lat: 37.772, lng: -122.214 },\r\n      { lat: 21.291, lng: -157.821 },\r\n      { lat: -18.142, lng: 178.431 },\r\n      { lat: -27.467, lng: 153.027 },\r\n    ],\r\n    zIndex: 1,\r\n  };\r\n  const paths = [\r\n    { lat: 37.772, lng: -122.214 },\r\n    { lat: 21.291, lng: -157.821 },\r\n    { lat: -18.142, lng: 178.431 },\r\n    { lat: -27.467, lng: 153.027 },\r\n  ]\r\n  const { loading, latitude, longitude } = useGeolocation();\r\n  const [markers, setMarkers] = useState([]);\r\n  const addMarkers = (e) => {\r\n    const locations = JSON.parse(JSON.stringify(e.latLng));\r\n    let temp = [...markers];\r\n    temp.push(locations );\r\n    setMarkers(temp);\r\n    console.log(markers);\r\n  };\r\n  return loading == false ? (\r\n    <div className=\"h-screen\">\r\n      <LoadScript googleMapsApiKey=\"AIzaSyChYudLMSXsW96r-zFnQocooSUVt9nop0Y\">\r\n        <GoogleMap\r\n          onClick={addMarkers}\r\n          mapContainerStyle={containerStyle}\r\n          center={{ lat: latitude, lng: longitude }}\r\n          zoom={10}\r\n        >\r\n          {markers.map(marker => <Marker position={{lat:marker.lat,lng:marker.lng}}/>)}\r\n          <Polyline path={markers} options={options}/>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  ) : (\r\n    <p className=\"h-screen flex justify-center items-center text-5xl font-bold\">\r\n      Loading\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","severity":1,"message":"23","line":1,"column":17,"nodeType":"24","messageId":"25","endLine":1,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":10,"column":7,"nodeType":"24","messageId":"25","endLine":10,"endColumn":13},{"ruleId":"22","severity":1,"message":"27","line":35,"column":9,"nodeType":"24","messageId":"25","endLine":35,"endColumn":14},{"ruleId":"28","severity":1,"message":"29","line":50,"column":18,"nodeType":"30","messageId":"31","endLine":50,"endColumn":20},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'center' is assigned a value but never used.","'paths' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]